-- 1. <학생> 테이블에서 모든 학생의 이름
select 이름
from 학생;

-- 2. 교수 테이블에서 모든 교수의 이름과 전화번호
select 이름, 전화번호
from 교수;

-- 3. 수강신청 테이블의 모든 내용
select *
from 수강신청;

-- 4. 학생 테이블의 2018학년도 1학기 수강신청을 하지 않은 학생의 이름
select 이름
from 학생
WHERE 이름 NOT IN(SELECT 학생.이름
				FROM 학생
				INNER JOIN 수강신청 ON 학생.학번=수강신청.학번 
				WHERE 연도=2018 AND 학기=1);


-- 5. 이름이 김민준인 학생의 2018년도 1학기 수강 신청 과목명
SELECT 과목명
FROM 학생, 수강신청, 수강신청내역, 과목
WHERE 학생.학번=수강신청.학번 AND 수강신청.수강신청번호=수강신청내역.수강신청번호
	AND 수강신청내역.과목번호=과목.과목번호 AND 학생.이름='김민준' AND 수강신청.연도=2018
    AND 수강신청.학기=1;
    
-- 6. 학생 테이블 이름 필드 오름차순 정렬
select 이름
from 학생
order by 이름;

-- 7. 힉셍 테이블 시도와 이름의 데이터를 시도, 이름 순서로 오름차순 정렬
 select 시도, 이름
 from 학생
 order by 시도, 이름;
 
-- 8. 학생 테이블 시도 내림차순 이름 오름차순
 select 시도, 이름
 from 학생
 order by 시도 desc, 이름;
 
-- 9. 학생 테이블 시도, 이름 순서로 내림차순
 select 시도, 이름
 from 학생
 order by 시도 desc, 이름 DESC;
 
-- 10. 수강신청 테이블 학변이 1801001인 레코드의 수강신청번호 학번 날짜
 select 수강신청번호, 학번, 날짜
 from 수강신청
 where 학번=1801001;
 
-- 11. 수강신청 테이블 날짜가 2018-01-01 이전에 수강 신청한 레코드의 수강신청번호, 학번, 날짜
select 수강신청번호, 학번, 날짜 
from 수강신청
where 날짜 < '2018-01-01'; /*날짜 미래, 과거 비교연산자 사용 가능함*/

-- 12. 과목 테이블 시수가 1,2,3인 레코드의 과목번호, 과목명, 시수
select 과목번호, 과목명, 시수
from 과목
where 시수 in (1,2,3);

-- 13. 교수 테이블의 전화번호 필드의 값이 없는 레코드의 이름과 학과
select 이름, 학과
from 교수
where 전화번호 is null;

-- 14. 수강신청 테이블에서 날짜가 2018-01-01 ~ 2018-07-13 사이 수강신청한 레코드의 학번,날짜
select 학번, 날짜
from 수강신청
where 날짜 between '2018-01-01' and '2018-07-13';
/* where 날짜 > '2018-01-01' and 날짜 < '2018-07-13'; */
/*날짜데이터 ''싸야함*/

-- 15. 교수 테이블의 전화번호가 있는 교수의 이름, 전자우편, 전화번호
select  이름, 전자우편, 전화번호
from 교수
where 전화번호 is not null;

-- 16. 수강신청 테이블 학번이 1601001, 연도 2016
select *
from 수강신청
where 학번=1601001 and 연도=2016;

-- 17. 수강신청 테이블 학번이 1601002, 1801002번인 학생의 수강신청 데이터
select *
from 수강신청
where 학번=1601002 or 학번=1801002; 
/*WHERE 학번 IN (1601002,1801002);*/

-- 18. 수강신청 테이블 1601001, 1601002 학생의 2016년도 수강신청 테이블
select *
from 수강신청
where 연도=2016 and (학번=1601001 or 학번=1601002);

-- 19. 수강신청 테이블 1601001, 1601002 학생의 수강신청 테이블 (in)
select *
from 수강신청
where 학번 in (1601001,1601002);

-- 20. 수강신청 테이블 1601001 학생을 제외한 모든 학생의 수강신청 테이블
select *
from 수강신청
where 학번!=1601001; /*WHERE 학번<>1601001; 비교연산자 아니다='<>'*/

-- 21. 교수 테이블의 김씨 성을 가진 교수의 자료
select *
from 교수
where 이름 like '김%';

-- 22. 학과 테이블의 학과 이름에 공학이 포함되ㅐ어 있는 학과의 정보
select *
from 학과
where 학과명 like '%공학%';

-- 23. 과목 테이블의 과목의 영문 이름이 C로 시작하여 e로 끝나는 과목의 과목번호, 과목명, 영문명
select 과목번호, 과목명, 영문명
from 과목
where 영문명 like 'C%e';

-- 24. 학생 테이블의 이름이 ㅇㅇ준과 같은 이름을 가진 학생
select *
from 학생
where 이름 like '__준'; /* '%준' */

/* 25. 수강신청내역 테이블의 과목번호가'K20045'이거나'K20056'이고 
평점이 3인 레코드의 수강신청번호, 과목번호, 평점 */
select 수강신청번호, 과목번호, 평점
from 수강신청내역
where (과목번호='K20045' or 과목번호='K20056') and 평점=3;

/* 26. 수강신청내역 과목번호가 'K20045','K20056','Y00132'인 과목의
수강신청번호, 과목번호, 평점을 과목번호 오름차순으로 정렬(IN)*/
SELECT 수강신청번호, 과목번호, 평점
FROM 수강신청내역
where 과목번호 IN ('K20045','K20056','Y00132')
ORDER BY 과목번호; /*ORDER BY 2; > SELECT 순서상 2번째가 과목번호*/

-- 27. 수강신청내역 테이블에서 평점이 -1이 아닌 레코드
SELECT *
FROM 수강신청내역
WHERE 평점!=-1; /*WHERE 평점 <> -1*/

-- 28. 학생 테이블에서 18학번 학생들의 학번, 이름, 시도
SELECT 학번, 이름, 시도
FROM 학생
WHERE 학번 LIKE '18%';

-- 29. 학생 테이블에서 주소 중에 시군구 필드가 구로 끝나는 학생들의 학번,이름,시도,시군구
SELECT 학번,이름,시도,시군구
from 학생
WHERE 시군구 LIKE '%구';

-- 30. 과목 테이블에서 영문명이 I로 시작하여 n으로 끝나는 과목의 과목번호, 과목명, 영문명
SELECT 과목번호, 과목명, 영문명
FROM 과목 
WHERE 영문명 LIKE 'I%n';

-- 31. 과목 테이블에서 과목명이 컴퓨터ㅇㅇ과 같은 이름을 가진 과목의 과목번호,과목명,영문명
SELECT 과목번호, 과목명, 영문명
FROM 과목
WHERE 과목명 LIKE '컴퓨터__';

-- 32. 학생 테이블에서 학생의 이름에 서자가 들어가는 학생의 학번,학과,이름,시도
SELECT 학번, 학과, 이름, 시도
FROM 학생
WHERE 이름 LIKE '%서%';

/* 33. 학생 테이블에서 이름,주소,시군구,시도,우편번호의 정보를 묶어서 하나의 필드로 가져오고
묶은 필드의 이름은 학생정보로 출력하고 이름으로 정렬 */
SELECT concat(이름,' ','(',우편번호,' ',시군구,' ',시도,' ',주소,')') '학생정보'
from 학생;


/*34 <과목> 테이블에서 '과목명', '담당교수' 필드를 가져와서 '담당교수' 필드의 별명을 담당교수사번'으로 
바꾸어 출력하는 SQL문을 작성하시오. */
select 과목명 , 담당교수 '담당교수사번'
from 과목;

/*35 <수강신청> 테이블에서 아래와 같이 '학번'이 '1801001'인 학생의 수강신청 자료를 출력하도록 
SQL문을 작성하시오. */
select 수강신청번호, CONCAT(연도,'학년도','-',학기,'학기')'신청학년도'
from 수강신청
where 학번=1801001;

/*36 〈학생〉 테이블에서 '학번'과 '이름', 그리고 이름 중 성씨만 가져오는 SQL문을 작성하시오. */
select 학번,substr(이름,1,1) '성' /*SELECT SUBSTR(name, 1, 1) ‘성’, COUNT(*) ‘인원’ */
from 학생;

/*37 〈학생〉 테이블에서 16학번인 학생의 학번과 이름, 학년을 가져오는 SQL문을 작성하시오. */
select 학번, 이름, 학년
from 학생
where 학번 like '16%';

/*=============38 <수강신청> 테이블에서 컴퓨터정보학과가 아닌 학생의 '수강신청번호', '학번','날짜'를 가져오는
SQL문을 작성하시오. */
select 수강신청번호, 학번, 날짜
from 수강신청;

/*39 <수강신청> 테이블에서 2018년 3월에 수강 신청한 레코드의 '수강신청번호', 학번', '날짜'를 
가져오는 SQL문을 작성하시오. */
select 수강신청번호, 학번, 날짜
from 수강신청
where 날짜 like '2018-03%';

/*=============40 <수강신청내역> 테이블에서 평점이 입력되어 있는(평점'이 -1이 아닌) 레코드중 '수강신청번호',
 '과목번호', '평점'과 평점이 0이면 '미취득' 아니면 '취득'으로 출력하는 SQL문을 작성하시오. 
 */
 select 수강신청번호, 과목번호, 평점
 from 수강신청내역
 where 평점 != -1(select 평점 from 수강신청내역 where if 평점=0 '미취득' else '취득');
 
 
 /*41 〈학생〉 테이블에서 이름'과 시도'를 하나로 묶어 필드명을 '이름'으로 읽어오는 SQL문을 작성하시오. */
 select concat(이름, '(',시도,')') '이름'
 from 학생;
 
 /*42 <과목> 테이블에서 ‘담당교수'와 '과목명'을 국문과 영문으로 읽어오는 SQL문을작성하시오.*/
 select 담당교수, concat(과목명,' ','(',영문명,')')
 from 과목;

/*43 <과목> 테이블에서 '과목명'과 학점', 그리고 한 학기를 15주라 가정했을 때 한 학기 총 수업 시간 수를 
읽어오는 SQL문을 작성하시오. */
select 과목명, 학점, ( 시수 *15)
from 과목 
order by 과목명;

/*44 <학생> 테이블에서 '학번'과 이름에서 성씨(last name)를 뺀 이름(first name)을 출력하는 
SQL문을 작성하시오*/
select 학번, substr(이름, 2,2) '이름'
from 학생;

/*45 <수강신청> 테이블에서 3월 1일 수강 신청한 데이터의 '학번'과 '날짜'를 출력하는 SQL문을 작성하시오*/
select 학번, 날짜
from 수강신청
where 날짜 like '%03-01%';

/*=============46 <학생> 테이블에서 아래 그림과 같이 '학번', '이름', 학과'와 컴퓨터정보학과인지 
다른 학과인지를 출력하는 SQL문을 작성하시오. */
select 학번, 이름, 학과,  '비고'
from 학생;

/*47 〈수강신청내역〉 테이블에서 전체 행의 수(레코드의 수)를 계산하는 SQL문을 작성하시오*/
select count(수강신청번호) '신청수'
from  수강신청내역;

/*48 〈수강신청내역〉 테이블에서 '수강신청번호'가 '1810002'인 수강신청 레코드의 수를 계산하는 
SQL문을 작성하시오. */
select count(수강신청번호) '과목수'
from 수강신청내역
where 수강신청번호 = 1810002;

/*49 <교수> 테이블에서 '전화번호'가 저장되어 있는 교수의 수를 계산하는 SQL문을 작성하시오.*/ 
select count(전화번호) '교수 수'
from 교수
where 전화번호 is not null; 
 
/*50 <과목> 테이블에서 과목을 담당하고 있는 교수가 몇 명인지 출력하시오.*/ 
 select count(DISTINCT 담당교수) /*중복제거 DISTINCT*/
 from 과목;
 
/*51 <과목> 테이블에서 전체 과목의 학점의 평균과 합을 구하는 SQL문을 작성하시오. */
select avg(학점), sum(학점)
from 과목;
 
/*52 <과목> 테이블의 과목 중에 최대 학점과 최소 학점을 구하는 SQL문을 작성하시오. */
select max(학점) '최대학점' ,MIN(학점) '최소학점'
from 과목;
 
/*53 <과목> 테이블에서 교수별로 담당하고 있는 과목 수와 학점 합계를 출력하시오. */
select 담당교수, count(과목명), sum(학점)
from 과목
group by 담당교수; 
 
/*54 〈수강신청내역> 테이블에서 수강 신청한 서로 다른 과목의 수가 몇 과목인지를 구하는 
SQL문을 작성하시오. */
select count(distinct 과목번호) '과목 수'
from 수강신청내역;

/*55 <수강신청> 테이블에서 수강 신청한 학생이 몇 명인지를 구하는 SQL문을 작성하시오.*/
select count(distinct 학번) '학생 수'
from 수강신청;
 
/*56 〈수강신청내역> 테이블에서 '수강신청번호' '1810001'의 신청 과목 수와 평균 평점을 구하는 
SQL문을 작성하시오. */
select count(수강신청번호)'과목수', avg(평점)'평균평점'
from 수강신청내역
where 수강신청번호=1810001;
 
/*57 <수강신청내역> 테이블에서 아래와 같이 과목별로 수강자 수를 읽어오는(과목번호, 수강자 수) SQL문을 작성하시오. */
select 과목번호, count(과목번호)
from 수강신청내역
group by 과목번호;
 
/*58 위의 문제에서 '평점'이 - 1인 과목은 제외하고 출력하도록 필터링하시오 */
select 과목번호, count(과목번호)
from 수강신청내역
where 평점 != '-1'
group by 과목번호; /*where group by 순서 챙기기*/
 
/*59 위의 문제에서 과목별 평균 평점을 출력하시오. */
select 과목번호, count(과목번호)'수강자수', avg(평점)'평균평점'
from 수강신청내역
where 평점 != '-1'
group by 과목번호;

/*60 위의 문제에서 수강자 수가 4 명 이상인 과목만을 출력하도록 필터링하시오. */
select 과목번호, count(과목번호)'수강자수', avg(평점)'평균평점'
from 수강신청내역
where 평점 != '-1' and (select count(과목번호) from 수강신청내역)>4
group by 과목번호;
 
/*61 위의 문제에서 평균평점을 기준으로 오름차순으로 정렬하시오. */
select 과목번호, count(과목번호)'수강자수', avg(평점)'평균평점'
from 수강신청내역
where 평점 != '-1' and (select count(과목번호) from 수강신청내역)>4
group by 과목번호
order by avg(평점);
 
/*=============62 <수강신청내역> 테이블에서 아래와 같이 '수강신청번호별로 수강과목 수와 평균평점을 출력하시오. 
(단, 수강과목 수가 3 이상인 것만 출력하고 평균평점에 대하여 내림차순으로 정렬하시오). */
select distinct 수강신청번호, count(수강신청번호)'수강과목 수', avg(평점)'평균평점'
from 수강신청내역
group by 수강신청번호;
 
 
/*63 모든 학생에 대하여 학번, 학과번호, 이름, 소속 학과 이름을 출력하는 SQL 문을 작성하시오.  */
 select 학생.학번,학생.학과,학생.이름,학과.학과명
 from 학생
 inner join 학과 on 학생.학과=학과.학과번호;
 
 
/*64 <수강신청내역> 테이블에서 수강신청번호 '1810001'와 '1610001'에 대하여 수강신청번호와 
수강 과목번호, 수강 과목명 출력하는 SQL 문을 작성하시오 */
select 수.수강신청번호, 수.과목번호, 과.과목명
from 수강신청내역 수
inner join 과목 과 on 수.과목번호=과.과목번호
where 수강신청번호=1810001 or 수강신청번호=1610001;

/*65 <수강신청> 테이블에서 2018 년도 수강신청에 대하여 수강신청번호, 신청자 학번, 신청자 이름을 출력하는 SQL 문을 작성하시오.*/ 
select 수.수강신청번호, 수.학번, 학.이름
from 수강신청 수
inner join 학생 학 on 수.학번=학.학번
where 연도=2018;

/*=============66 학번이 1801001'인 학생이 수강 신청한 수강신청번호, 과목번호, 과목명을 출력하는 
SQL 문을 작성하시오.*/ 

 
/*67=66 
 
/*68학번이 '1801001'인 학생이 수강 신청한 과목 수와 평점 합계를 출력하는 SQL 문을 작성하시오.*/ 
select count(*) '과목수', sum(평점) '평점합계'
from 과목, 수강신청내역, 수강신청, 학생 
where 과목.과목번호 = 수강신청내역.과목번호 
and 수강신청내역.수강신청번호 = 수강신청.수강신청번호 
and 수강신청.학번 = 학생.학번 
and 학생.학번 = '1801001';

 
/*69 수강신청 별로 신청 학생의 학번, 이름, 평균 평점(평점합계/과목수)를 출력하는 SQL 문을 작성하시오. 
(단, 학점이 부여된 수강신청만 출력한다)*/ 
select 수강신청.수강신청번호, 학생.학번, 이름, avg(평점) '평균평점'
from 수강신청, 수강신청내역, 학생
where 수강신청.수강신청번호 = 수강신청내역.수강신청번호 
and 수강신청.학번 = 학생.학번 
and 평점 <> -1
group by 수강신청.수강신청번호;
 
/*70 모든 학생에 대하여 학번, 학과번호, 이름, 소속 학과 이름을 출력하는 SOL 문을 작성하시오.*/ 
select  학생.학번, 학과.학과번호, 학생.이름, 학과.학과명
from 학생, 학과
where 학생.학과=학과.학과번호;

/*71=63*/
/*72=65*/
/*73 학번이 '1801001'인 학생이 수강 신청한 수강신청번호, 과목번호, 과목명을 출력하는 
SQL 문을 작성하시오*/ 
select 수강신청내역.수강신청번호, 수강신청내역.과목번호, 과목.과목명
from 수강신청내역,과목,수강신청
where 수강신청내역.과목번호=과목.과목번호 
and 수강신청내역.수강신청번호 = 수강신청.수강신청번호
and 수강신청.학번=1801001;
 
/*74 사번이 '1000004'인 교수와 같은 학과에 소속되어 있는 교수의 사번, 학과, 이름을 출력하시오 */
 select 사번, 학과, 이름
 from 교수
 where 학과 =(select 학과 from 교수 where 사번=1000004);
 
/*==========75 학생별로 학번, 이름, 수강 신청한 과목 수, 평균 평점을 출력하시오. 
(단, 학점이 부여된 수강 신청만 출력한다) */
select 학생.학번, 학생.이름,count(수강신청.학번)'과목수' avg(수강신청내역.평점)'평점평균'
from 학생, 수강신청, 수강신청내역
where학생.학번=수강신청.학번 
and 수강신청.수강신청번호=수강신청내역.수강신청번호
and 평점 <> -1
group by 학생.학번;

/*==========76 과목별로 수강한 인원, 부여된 평점의 평균을 출력하시오. (단, 1 학기 과목에 한한다)*/
select 