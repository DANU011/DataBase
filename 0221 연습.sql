-- 1. <학생> 테이블에서 모든 학생의 이름
select 이름
from 학생;

-- 2. 교수 테이블에서 모든 교수의 이름과 전화번호
select 이름, 전화번호
from 교수;

-- 3. 수강신청 테이블의 모든 내용
select *
from 수강신청;

-- 4. 학생 테이블의 2018학년도 1학기 수강신청을 하지 않은 학생의 이름
select 이름
from 학생
WHERE 이름 NOT IN(SELECT 학생.이름
				FROM 학생
				INNER JOIN 수강신청 ON 학생.학번=수강신청.학번 
				WHERE 연도=2018 AND 학기=1);


-- 5. 이름이 김민준인 학생의 2018년도 1학기 수강 신청 과목명
SELECT 과목명
FROM 학생, 수강신청, 수강신청내역, 과목
WHERE 학생.학번=수강신청.학번 AND 수강신청.수강신청번호=수강신청내역.수강신청번호
	AND 수강신청내역.과목번호=과목.과목번호 AND 학생.이름='김민준' AND 수강신청.연도=2018
    AND 수강신청.학기=1;
    
-- 6. 학생 테이블 이름 필드 오름차순 정렬
select 이름
from 학생
order by 이름;

-- 7. 힉셍 테이블 시도와 이름의 데이터를 시도, 이름 순서로 오름차순 정렬
 select 시도, 이름
 from 학생
 order by 시도, 이름;
 
-- 8. 학생 테이블 시도 내림차순 이름 오름차순
 select 시도, 이름
 from 학생
 order by 시도 desc, 이름;
 
-- 9. 학생 테이블 시도, 이름 순서로 내림차순
 select 시도, 이름
 from 학생
 order by 시도 desc, 이름 DESC;
 
-- 10. 수강신청 테이블 학변이 1801001인 레코드의 수강신청번호 학번 날짜
 select 수강신청번호, 학번, 날짜
 from 수강신청
 where 학번=1801001;
 
-- 11. 수강신청 테이블 날짜가 2018-01-01 이전에 수강 신청한 레코드의 수강신청번호, 학번, 날짜
select 수강신청번호, 학번, 날짜 
from 수강신청
where 날짜 < '2018-01-01'; /*날짜 미래, 과거 비교연산자 사용 가능함*/

-- 12. 과목 테이블 시수가 1,2,3인 레코드의 과목번호, 과목명, 시수
select 과목번호, 과목명, 시수
from 과목
where 시수 in (1,2,3);

-- 13. 교수 테이블의 전화번호 필드의 값이 없는 레코드의 이름과 학과
select 이름, 학과
from 교수
where 전화번호 is null;

-- 14. 수강신청 테이블에서 날짜가 2018-01-01 ~ 2018-07-13 사이 수강신청한 레코드의 학번,날짜
select 학번, 날짜
from 수강신청
where 날짜 between '2018-01-01' and '2018-07-13';
/* where 날짜 > '2018-01-01' and 날짜 < '2018-07-13'; */
/*날짜데이터 ''싸야함*/

-- 15. 교수 테이블의 전화번호가 있는 교수의 이름, 전자우편, 전화번호
select  이름, 전자우편, 전화번호
from 교수
where 전화번호 is not null;

-- 16. 수강신청 테이블 학번이 1601001, 연도 2016
select *
from 수강신청
where 학번=1601001 and 연도=2016;

-- 17. 수강신청 테이블 학번이 1601002, 1801002번인 학생의 수강신청 데이터
select *
from 수강신청
where 학번=1601002 or 학번=1801002; 
/*WHERE 학번 IN (1601002,1801002);*/

-- 18. 수강신청 테이블 1601001, 1601002 학생의 2016년도 수강신청 테이블
select *
from 수강신청
where 연도=2016 and (학번=1601001 or 학번=1601002);

-- 19. 수강신청 테이블 1601001, 1601002 학생의 수강신청 테이블 (in)
select *
from 수강신청
where 학번 in (1601001,1601002);

-- 20. 수강신청 테이블 1601001 학생을 제외한 모든 학생의 수강신청 테이블
select *
from 수강신청
where 학번!=1601001; /*WHERE 학번<>1601001; 비교연산자 아니다='<>'*/

-- 21. 교수 테이블의 김씨 성을 가진 교수의 자료
select *
from 교수
where 이름 like '김%';

-- 22. 학과 테이블의 학과 이름에 공학이 포함되ㅐ어 있는 학과의 정보
select *
from 학과
where 학과명 like '%공학%';

-- 23. 과목 테이블의 과목의 영문 이름이 C로 시작하여 e로 끝나는 과목의 과목번호, 과목명, 영문명
select 과목번호, 과목명, 영문명
from 과목
where 영문명 like 'C%e';

-- 24. 학생 테이블의 이름이 ㅇㅇ준과 같은 이름을 가진 학생
select *
from 학생
where 이름 like '__준'; /* '%준' */

/* 25. 수강신청내역 테이블의 과목번호가'K20045'이거나'K20056'이고 
평점이 3인 레코드의 수강신청번호, 과목번호, 평점 */
select 수강신청번호, 과목번호, 평점
from 수강신청내역
where (과목번호='K20045' or 과목번호='K20056') and 평점=3;

/* 26. 수강신청내역 과목번호가 'K20045','K20056','Y00132'인 과목의
수강신청번호, 과목번호, 평점을 과목번호 오름차순으로 정렬(IN)*/
SELECT 수강신청번호, 과목번호, 평점
FROM 수강신청내역
where 과목번호 IN ('K20045','K20056','Y00132')
ORDER BY 과목번호; /*ORDER BY 2; > SELECT 순서상 2번째가 과목번호*/

-- 27. 수강신청내역 테이블에서 평점이 -1이 아닌 레코드
SELECT *
FROM 수강신청내역
WHERE 평점!=-1; /*WHERE 평점 <> -1*/

-- 28. 학생 테이블에서 18학번 학생들의 학번, 이름, 시도
SELECT 학번, 이름, 시도
FROM 학생
WHERE 학번 LIKE '18%';

-- 29. 학생 테이블에서 주소 중에 시군구 필드가 구로 끝나는 학생들의 학번,이름,시도,시군구
SELECT 학번,이름,시도,시군구
from 학생
WHERE 시군구 LIKE '%구';

-- 30. 과목 테이블에서 영문명이 I로 시작하여 n으로 끝나는 과목의 과목번호, 과목명, 영문명
SELECT 과목번호, 과목명, 영문명
FROM 과목 
WHERE 영문명 LIKE 'I%n';

-- 31. 과목 테이블에서 과목명이 컴퓨터ㅇㅇ과 같은 이름을 가진 과목의 과목번호,과목명,영문명
SELECT 과목번호, 과목명, 영문명
FROM 과목
WHERE 과목명 LIKE '컴퓨터__';

-- 32. 학생 테이블에서 학생의 이름에 서자가 들어가는 학생의 학번,학과,이름,시도
SELECT 학번, 학과, 이름, 시도
FROM 학생
WHERE 이름 LIKE '%서%';

/* 33. 학생 테이블에서 이름,주소,시군구,시도,우편번호의 정보를 묶어서 하나의 필드로 가져오고
묶은 필드의 이름은 학생정보로 출력하고 이름으로 정렬 */
SELECT (이름,주소,시군구,시도,우편번호) AS 학생정보


